dependencies:
#  cache_directories:
#    - "~/.apt-cache"
#    - "~/examples/data"
  pre:
    # Let CircleCI cache the apt archive
#    - sudo rm -rf /var/cache/apt/archives && sudo ln -s ~/.apt-cache /var/cache/apt/archives
#    - bash <(wget -q -O- http://neuro.debian.net/_files/neurodebian-travis.sh)
  override:
    # Install apt packages
    - wget https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh;
    - bash miniconda.sh -b -p $HOME/miniconda
#    - export PATH="$HOME/miniconda/bin:$PATH"
    - echo "export PATH="$HOME/miniconda/bin:$PATH"" >> $HOME/.profile
    #- hash -r
    - conda config --set always_yes yes --set changeps1 no
    - conda update -q conda
    #- conda info -a
    - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION atlas numpy scipy networkx matplotlib nose pandas vtk

    # Set up python environment
    - pip install --upgrade pip
    - pip install -e .
    - pip install nibabel

    # Coverage packages:
    - pip install python-coveralls coverage nose-cov

    # Install Mindboggle:
    - python setup.py install

#machine:
#  environment:
#    FSLOUTPUTTYPE: NIFTI_GZ
#test:
#  override:
#    - mkdir -p ${CIRCLE_TEST_REPORTS}/nose
#    - source $HOME/.profile; nosetests --with-doctest --xunit-file="${CIRCLE_TEST_REPORTS}/nose/${CIRCLE_PROJECT_REPONAME}.xml" -c ./.noserc --logging-level=DEBUG --verbosity=3:
#        environment:
#          SPMMCRCMD: "$HOME/spm12/run_spm12.sh $HOME/mcr/v85/ script"
#          FORCE_SPMMCR: 1
#          FSL_COURSE_DATA: "$HOME/examples/fsl_course_data"
#        timeout: 2600
#    - set -o pipefail && cd doc && make html 2>&1 | tee ~/log.txt
#    - cat ~/log.txt && if grep -q "ERROR" ~/log.txt; then false; else true; fi
#    - source $HOME/.profile; python ~/nipype/tools/run_examples.py test_spm Linear workflow3d workflow4d:
#        pwd: ../examples
#        environment:
#          SPMMCRCMD: "$HOME/spm12/run_spm12.sh $HOME/mcr/v85/ script"
#          FORCE_SPMMCR: 1
#        timeout: 1600
#
#general:
#  artifacts:
#    - "doc/_build/html"
#    - "~/log.txt"
#    - "nosetests.xml"
#    - "coverage.xml"
