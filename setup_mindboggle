#!/usr/bin/python
"""
Mindboggle virtual machine setup script.

This program packages Mindboggle (http://mindboggle.info) and dependencies
in a VirtualBox virtual machine using Vagrant software.
Vagrant (http://www.vagrantup.com) and VirtualBox (http://www.virtualbox.org)
must be installed, and you need a good Internet connection.

Copy this file into a setup directory.  For example::

    mkdir /Users/arno/mindboggle_setup
    cp setup_mindboggle /Users/arno/mindboggle_setup/
    cd /Users/arno/mindboggle_setup/

For help using this program, type the following in a terminal window::

    python setup_mindboggle --help

As an example installation, configure access to ANTs and FreeSurfer data
via local mounted directories, and set the number of processors to 6::

    python setup_mindboggle --install
                            --home /home/vagrant
                            --freesurfer /Applications/freesurfer/subjects
                            --ants /data/antsCorticalThickness/subjects
                            --proc 6
    vagrant up install

The above installation is done only once, unless new configuration settings
are desired.  To run mindboggle::

    vagrant up
    vagrant ssh  # "VBoxManage list vms" if need the name of the VM


ADVANCED: To build the above Mindboggle box from scratch::

    # Run this file in your setup directory, and build the box:
    python setup_mindboggle --build --install
    vagrant up build
    VBoxManage list vms  # to find <vm name> below
    vagrant package --base <vm name> --output mindboggle.<version#>.box

    # Upload the box to the website:
    rsync -avz --sparse -e /usr/bin/ssh mindboggle.<version#>.box
        binarybottle@binarybottle.com:mindboggle.info/vm/

    # Manual install would begin with:
    vagrant init hashicorp/precise64
    vagrant up
    vagrant ssh


Authors:
Arno Klein, 2014  .  arno@mindboggle.info  .  www.binarybottle.com

Copyright 2014,  Mindboggle team (http://mindboggle.info), Apache v2.0 License

"""
import os
import argparse

#=============================================================================
# Command-line arguments
#=============================================================================
parser = argparse.ArgumentParser(description="""
This program either packages Mindboggle (http://mindboggle.info) and
all of its dependencies in a virtual machine (--build) or configures the
virtual machine (--install) with mounted directories to access FreeSurfer
recon-all subject data (--freesurfer), ANTs antsCorticalThickness.sh
subject data (--ants), or additional atlases (--atlases) and an output
directory (--out). You must have Vagrant (http://www.vagrantup.com)
and VirtualBox (http://www.virtualbox.org) installed, as well as a good
Internet connection.

Ex: python setup_mindboggle
    --out /Users/arno/setup_mindboggle
    --freesurfer /Applications/freesurfer/subjects
    --ants /data/antsCorticalThickness
    --proc 6 --mem 4096 --cpu 75 """,
    formatter_class = lambda prog:
    argparse.HelpFormatter(prog, max_help_position=40))

parser.add_argument("--out",
                    help=("Output directory (default: $HOME/mindboggled)"),
                    metavar='STR')
parser.add_argument("--freesurfer",
                    help=("FreeSurfer subjects directory (default: "
                          "$SUBJECTS_DIR)"),
                    metavar='STR')
parser.add_argument("--ants",
                    help=("Optional directory containing "
                          "antsCorticalThickness.sh "
                          "output in individual subject directories"),
                    metavar='STR')
parser.add_argument("--atlases",
                    help=("Optional directory containing additional atlases"),
                    metavar='STR')
parser.add_argument("--cpu",
                    help=('Maximum CPU (percent): "--cpu 50" (default)'),
                    type=int, default=50, metavar='INT')
parser.add_argument("--mem",
                    help=('Maximum memory (MB): "--mem 4096" (default)'),
                    type=int, default=4096, metavar='INT')
parser.add_argument("--proc",
                    help=('Number of processors: "--proc 1" (default)'),
                    type=int, default=1, metavar='INT')
parser.add_argument("--install",
                    help=("Configure the Vagrant box; mount ANTs and "
                          "FreeSurfer data (run once before running "
                          "mindboggle for the first time)"),
                    action='store_true')
parser.add_argument("--build",
                    help=("Build Vagrant box (ADVANCED)"),
                    action='store_true')

args = parser.parse_args()

#=============================================================================
# Configure mount directories and variables below
#=============================================================================
mindboggle_version = "0"
vagrantfile_api_version = "2"
home = os.environ['HOME']

if args.out:
    out_string = 'install_config.vm.synced_folder "{0}", ' \
        '"home/vagrant/mindboggled"'.format(args.out)
else:
    out_string = 'install_config.vm.synced_folder "{0}/mindboggled", ' \
        '"home/vagrant/mindboggled"'.format(os.environ['HOME'])
if args.freesurfer:
    freesurfer_string = 'install_config.vm.synced_folder "{0}", ' \
        '"/home/vagrant/freesurfer/subjects"'.\
        format(args.freesurfer)
else:
    freesurfer_string = 'install_config.vm.synced_folder "{0}", ' \
        '"/home/vagrant/freesurfer/subjects"'.\
        format(os.environ['SUBJECTS_DIR'])
if args.ants:
    ants_string = 'install_config.vm.synced_folder "{0}", ' \
                  '"/home/vagrant/ants_subjects"'.format(args.ants)
else:
    ants_string = ''
if args.atlases:
    atlases_string = 'install_config.vm.synced_folder "{0}", ' \
                     '"{1}atlases"'.format(args.atlases, home)
else:
    atlases_string = ''

#=============================================================================
# Installation script to include in Vagrant file
#=============================================================================
if args.build:
    script = """#=============================================================================
# Build script for Vagrantfile
#=============================================================================
$script = <<SCRIPT
CWD=$(pwd)
#-----------------------------------------------------------------------------
# Install Anaconda Python distribution:
#-----------------------------------------------------------------------------
wget http://repo.continuum.io/miniconda/Miniconda-2.2.2-Linux-x86_64.sh -O miniconda.sh
chmod +x miniconda.sh
./miniconda.sh -b
export PATH=$CWD/anaconda/bin:$PATH

#-----------------------------------------------------------------------------
# Install nipype dependencies:
#-----------------------------------------------------------------------------
conda install --yes pip cmake
conda install --yes numpy scipy nose traits networkx
conda install --yes dateutil ipython-notebook matplotlib
pip install nibabel --use-mirrors
pip install https://github.com/RDFLib/rdflib/archive/master.zip
pip install https://github.com/satra/prov/archive/rdf.zip
pip install https://github.com/nipy/nipype/archive/master.zip

#-----------------------------------------------------------------------------
# Install VTK (for ANTs):
#-----------------------------------------------------------------------------
conda install --yes vtk
VTK_DIR=$CWD/anaconda/lib/vtk-5.10  # Needed for ANTs
export PATH=$VTK_DIR:$PATH

#-----------------------------------------------------------------------------
# Install compiling utilities:
#-----------------------------------------------------------------------------
sudo apt-get -y update
sudo apt-get -y install g++
sudo apt-get -y install make
sudo apt-get -y install git
sudo apt-get -y install xorg openbox

#-----------------------------------------------------------------------------
# Install Mindboggle (pip for code, git for C++ code):
#-----------------------------------------------------------------------------
pip install https://github.com/binarybottle/mindboggle/archive/master.zip
git clone https://github.com/binarybottle/mindboggle.git
MINDBOGGLE_TOOLS=$CWD/mindboggle/mindboggle_tools/bin
export PATH=$MINDBOGGLE_TOOLS:$PATH
cd $MINDBOGGLE_TOOLS
cmake ../ -DVTK_DIR:STRING=$CWD/anaconda/lib/vtk-5.10
make
cd $CWD

#-----------------------------------------------------------------------------
# Install FreeSurfer:
#-----------------------------------------------------------------------------
# http://surfer.nmr.mgh.harvard.edu/fswiki/Download
wget -c ftp://surfer.nmr.mgh.harvard.edu/pub/dist/freesurfer/5.3.0/freesurfer-Linux-centos4_x86_64-stable-pub-v5.3.0.tar.gz
sudo tar xzvf freesurfer-Linux-centos4_x86_64-stable-pub-v5.3.0.tar.gz
rm freesurfer-Linux-centos4_x86_64-stable-pub-v5.3.0.tar.gz
FREESURFER_HOME=$CWD/freesurfer
SUBJECTS_DIR=$FREESURFER_HOME/subjects
export PATH=$FREESURFER_HOME:$SUBJECTS_DIR:$PATH
source $FREESURFER_HOME/SetUpFreeSurfer.sh

# Remove some of the larger directories:
cd freesurfer
sudo rm -r average fsfast matlab mni subjects tktools trctrain
cd lib
sudo rm -r cuda qt tcl tcltktixblt
cd $CWD

#-----------------------------------------------------------------------------
# Install ANTs:
#-----------------------------------------------------------------------------
# http://brianavants.wordpress.com/2012/04/13/
#        updated-ants-compile-instructions-april-12-2012/
git clone git://github.com/stnava/ANTs.git
mkdir antsbin
cd antsbin
cmake ../ANTs -DVTK_DIR:STRING=$CWD/anaconda/lib/vtk-5.10
make #-j 4
cp ../ANTs/Scripts/* bin/
cd $CWD
export ANTSPATH=$CWD/antsbin/bin/

SCRIPT
    """

    #-------------------------------------------------------------------------
    # FreeSurfer license:
    #-------------------------------------------------------------------------
    freesurfer_license = """arno@mindboggle.info
    18192
     *Cr4e1z13elAY"""
    license_file = os.path.join(os.environ['FREESURFER_HOME'], '.license')
    f = open(license_file, 'w')
    f.write(freesurfer_license)
    f.close()
else:
    script = ''

#=============================================================================
# Create Vagrantfile
#=============================================================================
vagrant_file = """# Vagrantfile (http://www.vagrantup.com)

{0}

#=============================================================================
# Configure Vagrantfile
#=============================================================================
Vagrant.configure({1}) do |config|

    #-------------------------------------------------------------------------
    # Build a Vagrant base box and install software as per the above script
    #-------------------------------------------------------------------------
    config.vm.define :build do |build_config|

        # Build from an existing Vagrant virtual box:
        build_config.vm.box = "precise64"
        build_config.vm.box_url = "http://files.vagrantup.com/precise64.box"

        # Create a forwarded port mapping to allow access to a specific port
        # within the machine from a port on the host machine. In this example,
        # accessing "localhost:8080" will access port 80 on the guest machine:
        build_config.vm.network "forwarded_port", guest: 80, host: 8080,
            auto_correct: true
        build_config.vm.network :public_network

        # Execute a script within the guest machine:
        build_config.vm.provision "shell", inline: $script

    end

    #-------------------------------------------------------------------------
    # Configure the Mindboggle Vagrant box and mount local directories
    #-------------------------------------------------------------------------
    config.vm.define :install do |install_config|

        # Build from the mindboggle.box Vagrant virtual box
        # (VirtualBox caches it so you only download once):
        install_config.vm.box = "mindboggle"
        install_config.vm.box_url = "mindboggle.{2}.box"
        #http://mindboggle.info/vm/mindboggle.{2}.box"
        install_config.vm.hostname = "mindboggler"

        # Create a forwarded port mapping to allow access to a specific port
        # within the machine from a port on the host machine. In this example,
        # accessing "localhost:8080" will access port 80 on the guest machine:
        install_config.vm.network "forwarded_port", guest: 80, host: 8080,
            auto_correct: true
        install_config.vm.network :public_network

        # Share an additional folder to the guest VM. The first argument is
        # the path on the host to the actual folder. The second argument is
        # the path on the guest to mount the folder.
        # Ex: install_config.vm.synced_folder "../data", "/vagrant_data"
        {3}
        {4}
        {5}
        {6}

        # Configure %CPU, memory, #CPUs
        install_config.vm.provider :virtualbox do |vb|
          vb.customize ["modifyvm", :id, "--cpuexecutioncap", "{7}"]
          vb.customize ["modifyvm", :id, "--memory", "{8}"]
          vb.customize ["modifyvm", :id, "--cpus", "{9}"]
          vb.customize ["modifyvm", :id, "--ioapic", "on"]
        end
    end
end
""".format(script, vagrantfile_api_version, mindboggle_version,
           out_string, freesurfer_string, ants_string, atlases_string,
           args.cpu, args.mem, args.proc)

#=============================================================================
# Write Vagrantfile with substitutions
#=============================================================================
f = open('Vagrantfile', 'w')
f.write(vagrant_file)
f.close()
