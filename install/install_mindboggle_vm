#!/usr/bin/python
"""
Mindboggle virtual machine configuration script (http://mindboggle.info).

This program downloads and configures the Mindboggle virtual machine.
It should be placed in its own directory and will generate a Vagrantfile.
Vagrant (vagrantup.com) and VirtualBox (virtualbox.org) must be installed,
and there needs to be a good Internet connection.

CONFIGURE MINDBOGGLE (ONE-TIME INSTALLATION)
--------------------------------------------
One-time installation for a given configuration (generates a Vagrantfile):
Here we configure access to FreeSurfer and ANTs data and an output directory
via local mounted directories, and set the number of processors, the memory,
and the percent cpu.  You could simply type::

    python install_mindboggle_vm

but this wouldn't enable use of ANTs data or tailor configuration to your
local setup.  In the following example using all arguments, all arguments
are optional, since the script assumes a default --out of $HOME/mindboggled
and --freesurfer of $SUBJECTS_DIR and no --ants data; we override default
settings with number of CPUs, percent CPU, RAM, and version of Mindboggle::

    python install_mindboggle_vm \
                --out $HOME/mindboggled \
                --freesurfer $SUBJECTS_DIR \
                --ants /data/antsCorticalThickness/subjects \
                --cpus 6 --cpumax 80 --mem 4096 --version 1.0.0

The above command generates a "Vagrantfile" file.
To actually download, install and configure the VM, and log in to the VM
to run mindboggle (the VM's username and password are both "vagrant"), type::

    vagrant up
    vagrant ssh

HELP
----
For help, type the following in a terminal window::

    python install_mindboggle_vm --help

Miscellaneous Vagrant commands::

    vagrant box list/remove  # boxes
    vagrant status  # status of virtual machines
    vagrant box add <title> <box>; vagrant init; vagrant up; vagrant ssh


Authors:
     - Arno Klein, 2014-2016  (arno@mindboggle.info)  http://binarybottle.com

Copyright 2016,  Mindboggle team (http://mindboggle.info), Apache v2.0 License

"""
import os
import argparse

mindboggle_version = "1.0.0"

#=============================================================================
# Command-line arguments
#=============================================================================
parser = argparse.ArgumentParser(description="""
This program downloads and configures the Mindboggle virtual machine,
with mounted directories to access FreeSurfer recon-all subject data
(--freesurfer), ANTs antsCorticalThickness.sh subject data (--ants),
or additional atlases (--atlases) and an output directory (--out).
All arguments are optional, since the script assumes a default --out of
$HOME/mindboggled and --freesurfer of $SUBJECTS_DIR and no --ants data.
This script will generate a Vagrantfile. You must have Vagrant (vagrantup.com)
and VirtualBox (virtualbox.org) installed, and a good Internet connection.
Once the virtual machine has been installed and configured as in the
following Example, log in to the vm to run mindboggle with
"vagrant up; vagrant ssh" (the vm's username and password are both "vagrant":

Example (default settings except --ants): python install_mindboggle_vm
    --out $HOME/mindboggled
    --work $HOME/mindboggle_working
    --cache $HOME/mindboggle_cache
    --freesurfer $SUBJECTS_DIR
    --ants $HOME/antsCorticalThickness/subjects
    --cpus 1 --cpumax 80 --mem 4096 --version {0}""".
                                 format(mindboggle_version),
                                 formatter_class = lambda prog:
                                 argparse.HelpFormatter(prog,
                                                        max_help_position=40))

parser.add_argument("--out",
                    help="Output directory (default: $HOME/mindboggled)",
                    metavar='STR')
parser.add_argument("--work",
                    help="Working directory (default: "
                         "$HOME/mindboggle_working)",
                    metavar='STR')
parser.add_argument("--cache",
                    help="Download directory (default: "
                         "$HOME/mindboggle_cache)",
                    metavar='STR')
parser.add_argument("--freesurfer",
                    help=("Path to FreeSurfer subjects directory (default: "
                          "$SUBJECTS_DIR)"),
                    metavar='STR')
parser.add_argument("--ants",
                    help=("Path to antsCorticalThickness.sh subjects "
                          "directory (optional)"),
                    metavar='STR')
parser.add_argument("--atlases",
                    help="Path to directory containing additional atlases "
                         "(optional)",
                    metavar='STR')
parser.add_argument("--cpus",
                    help='Number of processors: "--cpus 1" (default)',
                    type=int, default=1, metavar='INT')
parser.add_argument("--cpumax",
                    help='Maximum CPU (percent): "--cpumax 80" (default)',
                    type=int, default=80, metavar='INT')
parser.add_argument("--mem",
                    help='Maximum memory (MB): "--mem 4096" (default)',
                    type=int, default=4096, metavar='INT')
parser.add_argument("--version",
                    help='Mindboggle version: "--version {0}" (default)'.
                    format(mindboggle_version),
                    type=str, default='{0}'.format(mindboggle_version),
                    metavar='STR')
args = parser.parse_args()

#=============================================================================
# Configure mount directories
#=============================================================================
home = os.environ['HOME']
guest = "/home/vagrant"

if args.out:
    out_str = '"{0}", "{1}/mindboggled"'.format(args.out, guest)
else:
    out_str = '"{0}/mindboggled", "{1}/mindboggled"'.format(home, guest)
if args.out:
    work_str = '"{0}", "{1}/mindboggle_working"'.format(args.work, guest)
else:
    work_str = '"{0}/mindboggle_working", "{1}/mindboggle_working"'.\
        format(home, guest)
if args.out:
    cache_str = '"{0}", "{1}/mindboggle_cache"'.format(args.cache, guest)
else:
    cache_str = '"{0}/mindboggle_cache", "{1}/mindboggle_cache"'.\
        format(home, guest)
if args.freesurfer:
    freesurfer_str = '"{0}", "{1}/freesurfer_subjects"'.\
        format(args.freesurfer, guest)
else:
    freesurfer_str = '"{0}", "{1}/freesurfer_subjects"'.\
        format(os.environ['SUBJECTS_DIR'], guest)
if args.ants:
    ants_str = 'config.vm.synced_folder "{0}", "{1}/ants_subjects"'.\
        format(args.ants, guest)
else:
    ants_str = ''
if args.atlases:
    atlases_str = 'config.vm.synced_folder "{0}", "{1}/atlases"'.\
        format(args.atlases, guest)
else:
    atlases_str = ''
if args.version:
    version = args.version
else:
    version = mindboggle_version

#=============================================================================
# Create Vagrantfile
#=============================================================================
f = open('Vagrantfile', 'w')

vagrant_file = """# Vagrantfile (http://www.vagrantup.com)

#=============================================================================
# Configure the Mindboggle Vagrant box and mount local directories
#=============================================================================
Vagrant.configure("2") do |config|

    # Fetch the mindboggle Vagrant virtual box if not already cached:
    config.vm.box = "mindboggle"
    #config.vm.box_url = "mindboggle.{0}.box"
    config.vm.box_url = "http://media.mindboggle.info/vm/mindboggle.{0}.box"
    config.vm.hostname = "mindboggler"

    # Share additional folders to the guest VM,
    # with paths on the guest to mount the folder:
    config.vm.synced_folder {1}
    config.vm.synced_folder {2}
    config.vm.synced_folder {3}
    config.vm.synced_folder {4}
    {5}
    {6}

    # Configure number of CPUs, maximum % per CPU, and memory (MB RAM):
    config.vm.provider :virtualbox do |vb|
        vb.name = "MindboggleVM"
        vb.customize ["modifyvm", :id, "--cpus", "{7}"]
        vb.customize ["modifyvm", :id, "--cpuexecutioncap", "{8}"]
        vb.customize ["modifyvm", :id, "--memory", "{9}"]
        vb.customize ["modifyvm", :id, "--ioapic", "on"]
    end

    # Forward a port to use local browser to see files
    # served from remote vagrant box:
    config.vm.network "forwarded_port", guest: 80, host: 8080

    # Disable private key for easy ssh login:
    config.ssh.username = "vagrant"
    config.ssh.password = "vagrant"

end
""".format(version, out_str, work_str, cache_str, freesurfer_str,
           ants_str, atlases_str, args.cpus, args.cpumax, args.mem)

#=============================================================================
# Write Vagrantfile with substitutions
#=============================================================================
f.write(vagrant_file)
f.close()
